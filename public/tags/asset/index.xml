<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asset on Keep Coding</title>
    <link>https://alkn203.github.io/blog/tags/asset/</link>
    <description>Recent content in Asset on Keep Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 11 May 2017 20:15:06 +0900</lastBuildDate>
    <atom:link href="https://alkn203.github.io/blog/tags/asset/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spriteを移動させる</title>
      <link>https://alkn203.github.io/blog/2017/05/11/move-sprite</link>
      <pubDate>Thu, 11 May 2017 20:15:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/05/11/move-sprite</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;スプライト画像を移動する方法について説明します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/move-sprite.gif&#34; alt=&#34;move-sprite.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/bab85342&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;スプライトの移動&#34;&gt;スプライトの移動&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sprite&lt;/strong&gt;の&lt;strong&gt;update&lt;/strong&gt;関数に座標を変更する処理を書くと、毎フレーム呼ばれるので移動させることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;    // スプライト移動
    sprite.update = function() {
      sprite.moveBy(2, 1);
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;今回使った&lt;strong&gt;moveBy&lt;/strong&gt;関数は引数で与えれた数値ずつ&lt;strong&gt;x,y&lt;/strong&gt;の値を増やす処理をします。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;コード&#34;&gt;コード&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// グローバルに展開
phina.globalize();
// アセット
var ASSETS = {
  // 画像
  image: {
    &#39;tomapiko&#39;: &#39;https://rawgit.com/phi-jp/phina.js/develop/assets/images/tomapiko.png&#39;,
  },
};
/*
 * メインシーン
 */
phina.define(&amp;quot;MainScene&amp;quot;, {
  // 継承
  superClass: &#39;DisplayScene&#39;,
  // コンストラクタ
  init: function() {
    // 親クラス初期化
    this.superInit();
    // 背景
    this.backgroundColor = &#39;skyblue&#39;;
    // スプライト作成
    var sprite = Sprite(&#39;tomapiko&#39;).addChildTo(this);
    // 初期位置
    sprite.x = this.gridX.center();
    sprite.y = this.gridY.center();
    // スプライト移動
    sprite.update = function() {
      sprite.moveBy(2, 1);
    };
  },
});
/*
 * メイン処理
 */
phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    // MainScene から開始
    startLabel: &#39;main&#39;,
    // アセット読み込み
    assets: ASSETS,
  });
  // fps表示
  //app.enableStats();
  // 実行
  app.run();
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Spriteを表示する</title>
      <link>https://alkn203.github.io/blog/2017/05/02/display-sprite</link>
      <pubDate>Tue, 02 May 2017 20:15:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/05/02/display-sprite</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;ゲーム作成ではポピュラーなスプライト画像を表示する方法について説明します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/display-sprite.gif&#34; alt=&#34;display-sprite.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/91bff4d6&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;アセットの読み込み&#34;&gt;アセットの読み込み&lt;/h3&gt;

&lt;p&gt;スプライトを表示するためには、まず使用する画像をアセットとして読み込む必要があります。&lt;/p&gt;

&lt;h3 id=&#34;アセットの定義&#34;&gt;アセットの定義&lt;/h3&gt;

&lt;p&gt;アセットは以下のように定義します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// アセット
var ASSETS = {
  // 画像
  image: {
    &#39;tomapiko&#39;: &#39;https://rawgit.com/phi-jp/phina.js/develop/assets/images/tomapiko.png&#39;,
  },
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;image&lt;/strong&gt;はアセットの種類です。&lt;/li&gt;
&lt;li&gt;連想配列の左側にキー名、右側に使用するアセットの場所を書きます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;アセットの読み込み-1&#34;&gt;アセットの読み込み&lt;/h3&gt;

&lt;p&gt;読み込むためには、メイン関数の&lt;strong&gt;GameApp&lt;/strong&gt;のコンストラクタのプロパティ&lt;strong&gt;assets&lt;/strong&gt;に定義したアセットを引き渡します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    // MainScene から開始
    startLabel: &#39;main&#39;,
    // アセット読み込み
    assets: ASSETS,
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;コード&#34;&gt;コード&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// グローバルに展開
phina.globalize();
// アセット
var ASSETS = {
  // 画像
  image: {
    &#39;tomapiko&#39;: &#39;https://rawgit.com/phi-jp/phina.js/develop/assets/images/tomapiko.png&#39;,
  },
};
/*
 * メインシーン
 */
phina.define(&amp;quot;MainScene&amp;quot;, {
  // 継承
  superClass: &#39;DisplayScene&#39;,
  // コンストラクタ
  init: function() {
    // 親クラス初期化
    this.superInit();
    // 背景
    this.backgroundColor = &#39;skyblue&#39;;
    // スプライト画像作成
    var sprite = Sprite(&#39;tomapiko&#39;).addChildTo(this);
    // 初期位置
    sprite.x = this.gridX.center();
    sprite.y = this.gridY.center();
  },
});
/*
 * メイン処理
 */
phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    // MainScene から開始
    startLabel: &#39;main&#39;,
    // アセット読み込み
    assets: ASSETS,
  });
  // fps表示
  //app.enableStats();
  // 実行
  app.run();
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>