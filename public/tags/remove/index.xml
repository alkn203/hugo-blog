<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Remove on Keep Coding</title>
    <link>https://alkn203.github.io/blog/tags/remove/</link>
    <description>Recent content in Remove on Keep Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 26 May 2017 22:19:06 +0900</lastBuildDate>
    <atom:link href="https://alkn203.github.io/blog/tags/remove/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>タッチしたスプライトを消す</title>
      <link>https://alkn203.github.io/blog/2017/05/26/touch-and-remove</link>
      <pubDate>Fri, 26 May 2017 22:19:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/05/26/touch-and-remove</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;タッチされたスプライトを消す方法について説明します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/touch-remove.gif&#34; alt=&#34;touch-remove.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/dbd8507a&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;removeメソッド&#34;&gt;removeメソッド&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;    // スプライト画像を大量作成
    (32).times(function(i) {
      var sprite = Sprite(&#39;tomapiko&#39;).addChildTo(self);
      var half = sprite.width / 2;
      // ランダムな位置
      sprite.x = Random.randint(half, 640 - half);
      sprite.y = Random.randint(half, 960 - half);
      // タッチを有効にする
      sprite.setInteractive(true);
      // タッチイベント登録
      sprite.onpointstart = function() {
        // 削除
        sprite.remove();
      };
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;times&lt;/strong&gt;関数を使って、スプライトの作成を指定数繰り返しています。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Random&lt;/strong&gt;クラスの&lt;strong&gt;randint&lt;/strong&gt;メソッドを使って、スプライトをランダムな位置に表示します。&lt;/li&gt;
&lt;li&gt;スプライトのタッチを有効にするために&lt;strong&gt;setInteractive(true)&lt;/strong&gt;を忘れないようにします。&lt;/li&gt;
&lt;li&gt;スプライトの&lt;strong&gt;onpointstart&lt;/strong&gt;イベントの中で&lt;strong&gt;remove&lt;/strong&gt;を使ってスプライトを消しています。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;コード&#34;&gt;コード&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// グローバルに展開
phina.globalize();
// アセット
var ASSETS = {
  // 画像
  image: {
    &#39;tomapiko&#39;: &#39;https://rawgit.com/phi-jp/phina.js/develop/assets/images/tomapiko.png&#39;,
  },
};
/*
 * メインシーン
 */
phina.define(&amp;quot;MainScene&amp;quot;, {
  // 継承
  superClass: &#39;DisplayScene&#39;,
  // コンストラクタ
  init: function() {
    // 親クラス初期化
    this.superInit();
    // 背景
    this.backgroundColor = &#39;skyblue&#39;;
    var self = this;
    // スプライト画像を大量作成
    (32).times(function(i) {
      var sprite = Sprite(&#39;tomapiko&#39;).addChildTo(self);
      var half = sprite.width / 2;
      // ランダムな位置
      sprite.x = Random.randint(half, 640 - half);
      sprite.y = Random.randint(half, 960 - half);
      // タッチを有効にする
      sprite.setInteractive(true);
      // タッチイベント登録
      sprite.onpointstart = function() {
        // 削除
        sprite.remove();
      };
    });
  },
});
/*
 * メイン処理
 */
phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    title: &#39;タッチして削除&#39;,
    // MainScene から開始
    //startLabel: &#39;main&#39;,
    // アセット読み込み
    assets: ASSETS,
  });
  // fps表示
  //app.enableStats();
  // 実行
  app.run();
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>