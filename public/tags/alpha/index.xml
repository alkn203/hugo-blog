<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alpha on Keep Coding</title>
    <link>https://alkn203.github.io/blog/tags/alpha/</link>
    <description>Recent content in Alpha on Keep Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 14 May 2017 21:15:06 +0900</lastBuildDate>
    <atom:link href="https://alkn203.github.io/blog/tags/alpha/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spriteを透明にする</title>
      <link>https://alkn203.github.io/blog/2017/05/14/alpha-sprite</link>
      <pubDate>Sun, 14 May 2017 21:15:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/05/14/alpha-sprite</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;スプライトを透明にする方法について説明します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/alpha-sprite.gif&#34; alt=&#34;alpha-sprite.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/21f2a1e1&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;スプライトを透明にする-alpha&#34;&gt;スプライトを透明にする（alpha）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Sprite&lt;/strong&gt;の&lt;strong&gt;alpha&lt;/strong&gt;プロパティを変更します。初期値は&lt;strong&gt;1.0&lt;/strong&gt;で&lt;strong&gt;0&lt;/strong&gt;に近づくにつれて透明度が増していきます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;    // 徐々に透明にする
    sprite.update = function() {
      if (sprite.alpha &amp;lt; 0.01) {
        sprite.alpha = 0;
        return;
      }
      sprite.alpha -= 0.01;
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;スプライトの&lt;strong&gt;update&lt;/strong&gt;関数を利用して徐々に透明にしています。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;canvas&lt;/strong&gt;の仕様で&lt;strong&gt;alpha&lt;/strong&gt;が負の値になると透明度が無効になるため、条件式で&lt;strong&gt;0&lt;/strong&gt;にしています。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##サンプルコード&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// グローバルに展開
phina.globalize();
// アセット
var ASSETS = {
  // 画像
  image: {
    &#39;tomapiko&#39;: &#39;https://rawgit.com/phi-jp/phina.js/develop/assets/images/tomapiko.png&#39;,
  },
};
/*
 * メインシーン
 */
phina.define(&amp;quot;MainScene&amp;quot;, {
  // 継承
  superClass: &#39;DisplayScene&#39;,
  // コンストラクタ
  init: function() {
    // 親クラス初期化
    this.superInit();
    // 背景
    this.backgroundColor = &#39;skyblue&#39;;
    // スプライト作成
    var sprite = Sprite(&#39;tomapiko&#39;).addChildTo(this);
    // 初期位置
    sprite.x = this.gridX.center();
    sprite.y = this.gridY.center();
    // 徐々に透明にする
    sprite.update = function() {
      if (sprite.alpha &amp;lt; 0.01) {
        sprite.alpha = 0;
        return;
      }
      sprite.alpha -= 0.01;
    };
  },
});
/*
 * メイン処理
 */
phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    // MainScene から開始
    startLabel: &#39;main&#39;,
    // アセット読み込み
    assets: ASSETS,
  });
  // fps表示
  //app.enableStats();
  // 実行
  app.run();
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Shapeを透明化・非表示にする</title>
      <link>https://alkn203.github.io/blog/2017/04/22/alpha-shape</link>
      <pubDate>Sat, 22 Apr 2017 12:13:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/04/22/alpha-shape</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Shape&lt;/strong&gt;を透明化または非表示にします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/phina-template.gif&#34; alt=&#34;phina-template.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/7e1a191a&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;shapeの透明化&#34;&gt;Shapeの透明化&lt;/h3&gt;

&lt;p&gt;透明にするには&lt;strong&gt;alpha&lt;/strong&gt;プロパティに&lt;strong&gt;0&lt;/strong&gt;を指定します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.alpha = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;alpha&lt;/strong&gt;プロパティには&lt;strong&gt;0から1&lt;/strong&gt;が指定できるので、好みの透明度にすることができます。&lt;/p&gt;

&lt;h3 id=&#34;shapeの非表示&#34;&gt;Shapeの非表示&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;phina.js&lt;/strong&gt;では、透明化の他に&lt;strong&gt;hide&lt;/strong&gt;メソッドでオブジェクトそのものを非表示にすることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.hide();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/3df6a8b8&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;再表示するには、&lt;strong&gt;show&lt;/strong&gt;メソッドを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.show();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;透明化と非表示の違い&#34;&gt;透明化と非表示の違い&lt;/h3&gt;

&lt;p&gt;透明化ではオブジェクト自体は存在するので、当たり判定やタッチ処理は有効ですが、非表示にした場合は描画自体されないので、当たり判定やタッチ処理は無効になります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shapeを透明化・非表示にする</title>
      <link>https://alkn203.github.io/blog/2017/04/22/frameanimation-shape</link>
      <pubDate>Sat, 22 Apr 2017 12:13:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2017/04/22/frameanimation-shape</guid>
      <description>

&lt;h2 id=&#34;今回のtips&#34;&gt;今回のTips&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Shape&lt;/strong&gt;を透明化または非表示にします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/phina-template.gif&#34; alt=&#34;phina-template.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/7e1a191a&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;shapeの透明化&#34;&gt;Shapeの透明化&lt;/h3&gt;

&lt;p&gt;透明にするには&lt;strong&gt;alpha&lt;/strong&gt;プロパティに&lt;strong&gt;0&lt;/strong&gt;を指定します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.alpha = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;alpha&lt;/strong&gt;プロパティには&lt;strong&gt;0から1&lt;/strong&gt;が指定できるので、好みの透明度にすることができます。&lt;/p&gt;

&lt;h3 id=&#34;shapeの非表示&#34;&gt;Shapeの非表示&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;phina.js&lt;/strong&gt;では、透明化の他に&lt;strong&gt;hide&lt;/strong&gt;メソッドでオブジェクトそのものを非表示にすることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.hide();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/3df6a8b8&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;再表示するには、&lt;strong&gt;show&lt;/strong&gt;メソッドを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;shape.show();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;透明化と非表示の違い&#34;&gt;透明化と非表示の違い&lt;/h3&gt;

&lt;p&gt;透明化ではオブジェクト自体は存在するので、当たり判定やタッチ処理は有効ですが、非表示にした場合は描画自体されないので、当たり判定やタッチ処理は無効になります。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>