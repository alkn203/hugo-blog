<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extension on Keep On Coding</title>
    <link>https://alkn203.github.io/blog/tags/extension/</link>
    <description>Recent content in Extension on Keep On Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 03 Jan 2020 20:55:06 +0900</lastBuildDate>
    
	<atom:link href="https://alkn203.github.io/blog/tags/extension/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【phina.js】Mapクラスを作ってみた</title>
      <link>https://alkn203.github.io/blog/2020/01/03/phina-map-class/</link>
      <pubDate>Fri, 03 Jan 2020 20:55:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2020/01/03/phina-map-class/</guid>
      <description>はじめに RPGなどで固定マップで単純な当たり判定を行いたい時は、Mapデータと当たり判定データを読み込んで行う方法が便利です。 今回は、enchant.jsにあったMapクラスを参考にphina.js版を作ってみました。
コンストラクタ var map = phina.util.Map({ tileWidth: 64, tileHeight: 64, imageName: &amp;#39;tile&amp;#39;, mapData: data, collisionData: collision, }).addChildTo(this);     プロパティ 説明     tileWidth タイルの幅   tileHeight タイルの高さ   imageName タイルセット画像の名前   mapData マップデータの2次元配列   collisionData タイル衝突判定用の2次元配列    メンバ関数    関数 説明     hitTest マップとの衝突判定を行う   checkTile タイルが何か調べる    おわりに 本格的なマップ作成には、タイルマップエディタが必要になってくると思いますが、簡単なゲームであれば、この程度の機能でも使えるのではないでしょうか。</description>
    </item>
    
  </channel>
</rss>