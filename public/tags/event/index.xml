<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event on Keep Coding</title>
    <link>https://alkn203.github.io/blog/tags/event/</link>
    <description>Recent content in Event on Keep Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 29 Nov 2016 00:01:08 +0900</lastBuildDate>
    <atom:link href="https://alkn203.github.io/blog/tags/event/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>006-Shapeの更新イベント処理</title>
      <link>https://alkn203.github.io/blog/2016/11/29/phina-update-shape</link>
      <pubDate>Tue, 29 Nov 2016 00:01:08 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2016/11/29/phina-update-shape</guid>
      <description>

&lt;h2 id=&#34;内容&#34;&gt;内容&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Shape&lt;/strong&gt;に対してフレーム更新処理を登録する方法について説明します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alkn203.github.io/blog/images/phina-update-shape.png&#34; alt=&#34;phina-invisible-shape&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;更新イベント処理-update&#34;&gt;更新イベント処理（update）&lt;/h2&gt;

&lt;p&gt;更新処理を登録するためには、&lt;strong&gt;shape&lt;/strong&gt;の&lt;strong&gt;update&lt;/strong&gt;関数を実装します。
&lt;strong&gt;update&lt;/strong&gt;関数が実装されていると、その内容が毎フレーム実行されます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 毎フレーム更新処理
shape.update = function() {
  // 移動
  shape.moveBy(1, 1);  
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/d709760f&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;更新イベント処理-on-enterframe&#34;&gt;更新イベント処理（on + enterframe）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;では1つのメソッドしか登録できません。一方、&lt;strong&gt;on&lt;/strong&gt;と&lt;strong&gt;enterframe&lt;/strong&gt;を組み合わせると複数のメソッドを登録可能で、その内容が並行して実行されます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 毎フレーム更新処理
shape.on(&#39;enterframe&#39;, function() {
  // 移動
  shape.moveBy(1, 1);  
});
// 毎フレーム更新処理
shape.on(&#39;enterframe&#39;, function() {
  // 回転
  shape.rotation++;  
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://runstant.com/alkn203/projects/0705ecfc&#34; target=&#34;_blank&#34;&gt;[runstantで確認]&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>