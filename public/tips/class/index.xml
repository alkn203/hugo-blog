<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Class on Keep On Coding</title>
    <link>https://alkn203.github.io/blog/tips/class/</link>
    <description>Recent content in Class on Keep On Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language><atom:link href="https://alkn203.github.io/blog/tips/class/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spriteクラスを継承して独自のクラスを作る</title>
      <link>https://alkn203.github.io/blog/2021/06/25/inherit-class/</link>
      <pubDate>Fri, 25 Jun 2021 14:59:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2021/06/25/inherit-class/</guid>
      <description>クラスを継承する Spriteクラスを継承して新たなクラスを作成する方法について説明します。
/* * Tomapikoクラス */ phina.define(&amp;#34;Tomapiko&amp;#34;, { // Spriteクラスを継承  superClass: &amp;#39;Sprite&amp;#39;, // コンストラクタ  init: function() { // 親クラス初期化  this.superInit(&amp;#39;tomapiko&amp;#39;); }, });  Spriteクラスを継承したTomapikoクラスを作成しています。 superClassで継承元のクラスを指定します。 this.superInit で継承元のクラス(Sprite)を初期化できるので、引数にアセット名を与えます。  サンプルコード コードを見る // グローバルに展開 phina.globalize(); // アセット var ASSETS = { // 画像  image: { &amp;#39;tomapiko&amp;#39;: &amp;#39;https://cdn.jsdelivr.net/gh/phinajs/phina.js@v0.2.3/assets/images/tomapiko.png&amp;#39;, }, }; /* * メインシーン */ phina.define(&amp;#34;MainScene&amp;#34;, { // 継承  superClass: &amp;#39;DisplayScene&amp;#39;, // コンストラクタ  init: function() { // 親クラス初期化  this.</description>
    </item>
    
    <item>
      <title>クラスを作成する</title>
      <link>https://alkn203.github.io/blog/2021/06/25/create-class/</link>
      <pubDate>Fri, 25 Jun 2021 13:59:06 +0900</pubDate>
      
      <guid>https://alkn203.github.io/blog/2021/06/25/create-class/</guid>
      <description>phina.defineを使ってクラスを作成する phina.defineでクラスを定義するときは、必ず何かを継承しなければいけないというわけではありません。以下のように、一般的なクラスも作成することができます。
/* * 自作クラス */ phina.define(&amp;#34;Car&amp;#34;, { // 初期化  init: function(maker, name) { // クラスメンバ  this.maker = maker; this.name = name; }, }); サンプルコード コードを見る // グローバルに展開 phina.globalize(); /* * メインシーン */ phina.define(&amp;#34;MainScene&amp;#34;, { // 継承  superClass: &amp;#39;DisplayScene&amp;#39;, // 初期化  init: function() { // 親クラス初期化  this.superInit(); // 背景色  this.backgroundColor = &amp;#39;black&amp;#39;; // 独自クラス  var car1 = Car(&amp;#39;Honda&amp;#39;, &amp;#39;City&amp;#39;); var car2 = Car(&amp;#39;Nissan&amp;#39;, &amp;#39;180&amp;#39;); // メンバにアクセス  console.</description>
    </item>
    
  </channel>
</rss>
